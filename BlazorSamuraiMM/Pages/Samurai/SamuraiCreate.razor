@page "/samuraiCreate"
@inject ISamurai samurai
@inject NavigationManager NavManager

<h3>Create A Samurai</h3>
<EditForm Model="@samuraiModel" OnValidSubmit="CreateSamurai">
    @*For at vores beskreder fra vores validering kan vises*@
    <ValidationSummary />
    @*For at vores validering på modelleren kan bruges skal vi tilføje følgende*@
    <DataAnnotationsValidator />
    <div class="form-control">
        FirstName <input type="text" @bind="samuraiModel.FirstName" />
    </div>
    <div class="form-control">
        LastName <input type="text" @bind="samuraiModel.LastName" />
    </div>
    <div class="form-control">
        Birthdate <input type="text" @bind="samuraiModel.Birthdate" />
    </div>
    <div class="form-control">
        ClanID <input type="text" @bind="samuraiModel.ClanID" />
    </div>
    <button type="submit">Confirm</button>

</EditForm>
<button @onclick="Back">Back</button>


@code {
    /// <summary>
    /// vores gå tilbage knap
    /// </summary>
    private void Back()
    {
        //skift vindue
        NavManager.NavigateTo("/samurai");
    }

    //istansiere vores model
    SamuraiModel samuraiModel = new();

    /// <summary>
    /// vores indsæt i tabellen metode
    /// </summary>
    private void CreateSamurai()
    {
        try
        {
            //kør metode
            samurai.InsertSamurai(samuraiModel);
            //skift vindue
            NavManager.NavigateTo("samurai");
        }
        catch
        {
            //bygger vores navigateTo ordenligt op
            string infostring = $"{(samuraiModel.ClanID).ToString()} is out of range.";
            string currentModel = "Samurai Model";
            string CurrentId = " ";
            string url = "samuraiCreate";

            //skift vindue
            NavManager.NavigateTo($"/errorIDPage/{url}/{CurrentId}/{currentModel}/{infostring}");
        }
    }
}
