@page "/samuraiUpdate/{CurrentId}"
@inject ISamurai samurai
@inject NavigationManager NavManager

<h3>Update Samurai</h3>

<EditForm Model="@samuraiModel" OnValidSubmit="UpdateSamurai">
    @*For at vores beskreder fra vores validering kan vises*@
    <ValidationSummary />
    @*For at vores validering på modelleren kan bruges skal vi tilføje følgende*@
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-md-8">
            <label>FirstName</label>
            <input class="form-control" @bind="samuraiModel.FirstName" />
            <label>LastName</label>
            <input class="form-control" @bind="samuraiModel.LastName" />
            <label>Birthdate</label>
            <input class="form-control" @bind="samuraiModel.Birthdate" />
        </div>
    </div>
    <div class="row">
        <button type="submit">Confirm</button>
    </div>
</EditForm>

@code {
    //parameter gør at vi kan hente dataen ned fra url som bliver parset med
    [Parameter]
    public string CurrentId { get; set; }

    //istansiere vores model
    SamuraiModel samuraiModel = new();

    /// <summary>
    /// overrider er så vi overskriver dataen hver gang
    /// gør klar til udprint
    /// </summary>
    protected override void OnInitialized()
    {
        //indsæt
        samuraiModel = samurai.ReadOneSamurai(Convert.ToInt32(CurrentId));
    }
    public void UpdateSamurai()
    {
        try
        {
            //kør metode
            samurai.UpdateSamurai(samuraiModel);
            //skift vindue
            NavManager.NavigateTo("samurai");
        }
        catch
        {
            //gør navigateTo klar
            string infostring = "DateTime must be between Year 1753 and 9999";
            string currentModel = "Samurai Model";
            string url = "samuraiUpdate";

            //skift vindue
            NavManager.NavigateTo($"/errorIDPage/{url}/{CurrentId}/{currentModel}/{infostring}");
        }
    }
}
