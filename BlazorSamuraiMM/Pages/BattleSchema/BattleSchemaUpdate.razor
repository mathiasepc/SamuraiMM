@page "/battleSchemaUpdate/{CurrentId}/{CurrentId2}"
@inject IBattleSchema battleSchema
@inject NavigationManager NavManager

<div class="topSection">
    <h3>Update battleSchema</h3>
    <button @onclick="Back">Back</button>
</div>
<EditForm Model="@battleSchemaModel" OnValidSubmit="UpdateBattleSchema">
    @*For at vores beskreder fra vores validering kan vises*@
    <div class="errorBox">
        <ValidationSummary />
        @*For at vores validering på modelleren kan bruges skal vi tilføje følgende*@
        <DataAnnotationsValidator />
    </div>
    <div class="row">
        <div class="">
            <label>SamuraiID</label>
            <input class="form-control" @bind="battleSchemaModel.SamuraiID" />
            <label>BattlesID</label>
            <input class="form-control" @bind="battleSchemaModel.BattlesID" />
        </div>

        <div class="formButton">
            <button type="submit">Confirm</button>
        </div>
    </div>
</EditForm>

@code {
    //parameter gør at vi kan hente dataen ned fra url som bliver parset med
    [Parameter]
    public string CurrentId { get; set; }
    [Parameter]
    public string CurrentId2 { get; set; }

    //instansiere model
    BattleSchemaModel battleSchemaModel = new();

    /// <summary>
    /// overrider er så vi overskriver dataen hver gang
    /// gør klar til udprint
    /// </summary>
    protected override void OnInitialized()
    {
        //indsætter i model
        battleSchemaModel = battleSchema.ReadOneBattleSchema(Convert.ToInt32(CurrentId), Convert.ToInt32(CurrentId2));
    }

    private void Back()
    {
        //skift vindue
        NavManager.NavigateTo("/battleSchema");
    }

    /// <summary>
    /// vores update metode
    /// </summary>
    private void UpdateBattleSchema()
    {
        try
        {
            //kør metode
            battleSchema.UpdateBattleSchema(battleSchemaModel, Convert.ToInt32(CurrentId), Convert.ToInt32(CurrentId2));
            //skift vindue
            NavManager.NavigateTo("battleSchema");
        }
        catch
        {
            //gør vores navigate to klar
            string infostring = $"'{battleSchemaModel.SamuraiID.ToString()}' or '{battleSchemaModel.BattlesID.ToString()}' is not an existent BattleID or SamuraiID";
            string currentModel = "BattleSchema Model";
            string url = "battleSchemaUpdate";

            //skift vindue
            NavManager.NavigateTo($"/errorIDPage/{url}/{CurrentId}/{CurrentId2}/{currentModel}/{infostring}");
        }
    }
}
