@page "/"
@inject ILogin login
@inject NavigationManager navManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Index</PageTitle>

<div class="loginSection">
<EditForm Model="@loginModel" OnValidSubmit="GetUser">
    @*For at vores beskreder fra vores validering kan vises*@
    <div class="errorBox">
        <ValidationSummary />
        @*For at vores validering på modelleren kan bruges skal vi tilføje følgende*@
        <DataAnnotationsValidator />
    </div>
    <label>Email:</label>
    <input class="login-form" @bind="loginModel.Email" />
    <label>Password:</label>
        <input class="login-form" @bind="loginModel.Password" />
    <div class="formButton">
        <button type="submit">Login</button>
    </div>

</EditForm>
<div class="formButton">
    <button @onclick="Register">Register</button>
</div>
</div>

@code {
    //istansiere vores List
    LoginModel loginModel = new();

    /// <summary>
    /// overrider er så vi overskriver dataen hver gang
    /// gør klar til udprint
    /// </summary>
    protected override void OnInitialized()
    {

    }

    public void GetUser()
    {
        if (login.GetUser(loginModel))
        {
            localStorage.SetItemAsync("UserSession", "1");
            localStorage.SetItemAsync($"Email", $"{loginModel.Email}");
            localStorage.SetItemAsync($"Password", $"{loginModel.Password}");
            navManager.NavigateTo($"/welcome");
        }
        else
        {
            string infostring = "Wrong login info.";
            string url = " ";
            //skift vindue
            navManager.NavigateTo($"/loginErrorPage/{url}/{infostring}");
        }
    }

    public void Register()
    {
        navManager.NavigateTo($"/register");
    }
}
